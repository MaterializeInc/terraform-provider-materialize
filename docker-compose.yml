---
version: "3.9"

services:

  materialized:
    image: materialize/materialized:latest
    container_name: materialized
    ports:
      - 6875:6875
      - 6878:6878
    healthcheck: {test: curl -f localhost:6878/api/readyz, interval: 1s, start_period: 35s}

  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:v21.11.2
    command:
      - redpanda start
      - --overprovisioned
      - --smp 1
      - --memory 1G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --kafka-addr 0.0.0.0:9092
      - --advertise-kafka-addr ${EXTERNAL_IP:-redpanda}:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr ${EXTERNAL_IP:-redpanda}:8082
      - --set redpanda.enable_transactions=true
      - --set redpanda.enable_idempotence=true
      - --set redpanda.auto_create_topics_enabled=true
      - --set redpanda.default_topic_partitions=1
    ports:
      - 9092:9092
      - 8081:8081
      - 8082:8082
    healthcheck: {test: curl -f localhost:9644/v1/status/ready, interval: 1s, start_period: 30s}

  postgres:
    container_name: postgres
    build:
      context: ./integration/postgres
    volumes:
     - ${PWD}/integration/postgres:/docker-entrypoint-initdb.d
    init: true
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-c2VjcmV0Cg==}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}

  provider:
    build:
      context: .
    container_name: provider
    depends_on:
      materialized: {condition: service_healthy}
    volumes:
      - ./integration:/usr/src/app/integration
    environment:
      TF_LOG: INFO
    command: >
      sh -c "tail -F /dev/null"
