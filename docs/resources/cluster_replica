---
page_title: "materialize_cluster_replica Resource - terraform-provider-materialize"
subcategory: ""
description: |-
  Cluster replicas allocate physical compute resources for a cluster.
---

# materialize_cluster_replica (Resource)

Cluster replicas allocate physical compute resources for a cluster.

*Note*: Cluster replicas are deprecated. We recommend migrating to a managed cluster using the `materialize_cluster` resource and selecting `size`.

## Example Usage

```terraform
resource "materialize_cluster_replica" "example_cluster_replica" {
  name         = "replica"
  cluster_name = "cluster"
  size         = "2xsmall"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `cluster_name` (String) The cluster whose resources you want to create an additional computation of.
- `name` (String) The identifier for the replica.
- `size` (String) The size of the replica.

### Optional

- `availability_zone` (String) The specific availability zone of the replica.
- `comment` (String) **Private Preview** Comment on an object in the database.
- `disk` (Boolean) **Private Preview**. Whether or not the replica is a _disk-backed replica_.
- `id` (String) The ID of this resource.
- `idle_arrangement_merge_effort` (Number) The amount of effort to exert compacting arrangements during idle periods. This is an unstable option! It may be changed or removed at any time.
- `introspection_debugging` (Boolean) Whether to introspect the gathering of the introspection data.
- `introspection_interval` (String) The interval at which to collect introspection data.
- `region` (String) The region to use for the resource connection. If not set, the default region is used.

## Import

Import is supported using the following syntax:

```shell
# Cluster replicas can be imported using the cluster replica id:
terraform import materialize_cluster_replica.example_1_cluster_replica <region>:<cluster_replica_id>

# Cluster replica id and information be found in the `mz_catalog.mz_cluster_replicas` table
# The region is the region where the database is located (e.g. aws/us-east-1)
```